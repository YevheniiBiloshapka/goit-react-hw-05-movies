{"version":3,"file":"static/js/287.737db9d3.chunk.js","mappings":"yOAGaA,EAAOC,EAAAA,GAAAA,IAAH,iPAQSC,GAKbC,EAAQF,EAAAA,GAAAA,GAAH,weA2BLG,EAAWH,EAAAA,GAAAA,GAAH,qbAqBRI,EAAOJ,EAAAA,GAAAA,GAAH,8XAYJK,EAAYL,EAAAA,GAAAA,IAAH,+EAMTM,EAAON,EAAAA,GAAAA,IAAH,yZAgBJO,EAAWP,EAAAA,GAAAA,GAAH,4K,sDC7CrB,EArCa,WACX,IAAMQ,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAaC,KAAKH,EACnB,GAAE,KAGD,iCACE,SAACb,EAAD,WACE,UAACG,EAAD,YACE,uCADF,cAIF,SAAC,IAAD,WACE,SAACC,EAAD,UACGQ,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,eAA3B,OACd,SAAChB,EAAD,WACE,UAAC,KAAD,CAASiB,GAAE,kBAAaJ,EAAb,SAAwBK,MAAO,CAAEC,KAAMf,GAAlD,WACE,SAACH,EAAD,CACEmB,IAAG,0CAAqCN,GACxCO,IAAKL,EACLM,MAAM,MACNC,OAAO,SAET,SAACrB,EAAD,WACE,SAACC,EAAD,UAAWY,UATNF,EADG,UAmBzB,C,8LClDKW,EAAM,mCAGL,SAAed,IAAtB,4CAAO,OAAP,oBAAO,oGACkBe,EAAAA,GAAAA,IAAA,sBAAiC,CACtDC,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEASA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAgCC,EAAOC,GAAvC,wFACkBR,EAAAA,EAAAA,IAAM,uBAAD,OAAwBO,GAAS,CAC3DN,OAAQ,CACNC,QAASH,EACTU,SAAU,QACVD,KAAMA,EACNE,eAAe,KANd,cACCC,EADD,yBASEA,EAASP,MATX,kEAWA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,wFACkBY,EAAAA,EAAAA,IAAM,UAAD,OAAWZ,GAAM,CAC3Ca,OAAQ,CACNC,QAASH,EACTU,SAAU,QACVI,mBAAoBzB,KALnB,cACCuB,EADD,yBAQEA,EAASP,MARX,kEAWA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1B,GAA9B,wFACkBY,EAAAA,EAAAA,IAAM,UAAD,OAAWZ,EAAX,YAAyB,CACnDa,OAAQ,CACNC,QAASH,EACTU,SAAU,WAJT,cACCE,EADD,yBAOEA,EAASP,KAAKW,MAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiC5B,GAAjC,wFACkBY,EAAAA,EAAAA,IAAM,UAAD,OAAWZ,EAAX,YAAyB,CACnDa,OAAQ,CACNC,QAASH,EACTU,SAAU,QACVD,KAAM,KALL,cACCG,EADD,yBAQEA,EAASP,KAAKC,SARhB,kEA3CPL,EAAAA,GAAAA,SAAAA,QAAyB,8B","sources":["components/pages/Home/Home.styled.js","components/pages/Home/Home.jsx","components/services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport background from '../..//img/hero.jpg';\n\nexport const Hero = styled.div`\n  position: absolute;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  height: 511px;\n\n  background-image: url(${background});\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 25px 0 0 0;\n\n  font-weight: 800;\n  font-size: 60px;\n  line-height: 74.69%;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n\n  color: #0d0d0d;\n\n  & span {\n    font-weight: 900;\n    font-size: 40px;\n    line-height: 76.69%;\n    letter-spacing: 0.03em;\n    text-transform: uppercase;\n    margin-bottom: 8px;\n\n    color: #ffffff;\n  }\n`;\n\nexport const FilmList = styled.ul`\n  position: relative;\n  z-index: 1;\n\n  padding: 21px;\n  background: #ffffff;\n  box-shadow: -2px -2px 4px rgba(126, 147, 255, 0.2);\n  border-radius: 6px;\n\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 38px;\n\n  margin-top: 400px;\n  margin-bottom: 100px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  border-radius: 6px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0px 0px 20px rgba(47, 3, 3, 0.43);\n  }\n`;\nexport const ItemImage = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const Tumb = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 50px;\n  position: absolute;\n  left: 0;\n  bottom: 0;\n\n  background: rgba(94, 92, 92, 0.34);\n  box-shadow: inset 11.9px -11.9px 11.9px rgba(165, 165, 165, 0.051),\n    inset -11.9px 11.9px 11.9px rgba(255, 255, 255, 0.051);\n  backdrop-filter: blur(11.305px);\n`;\nexport const ItemName = styled.h2`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 12px;\n  text-align: center;\n  letter-spacing: 0.03em;\n  margin: 0;\n\n  color: #ffffff;\n`;\n","import {\n  Hero,\n  Title,\n  FilmList,\n  Item,\n  Tumb,\n  ItemName,\n  ItemImage,\n} from './Home.styled';\n\nimport { Container } from '../../Container/Container.styled';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport { fetchTrend } from '../../services/fetchAPI';\n\nconst Home = () => {\n  const location = useLocation();\n  const [trandMovie, setTrandMovie] = useState([]);\n  useEffect(() => {\n    fetchTrend().then(setTrandMovie);\n  }, []);\n\n  return (\n    <>\n      <Hero>\n        <Title>\n          <span>Trending</span>Today\n        </Title>\n      </Hero>\n      <Container>\n        <FilmList>\n          {trandMovie.map(({ id, poster_path, title, original_title }) => (\n            <Item key={id}>\n              <NavLink to={`/movies/${id}/cast`} state={{ from: location }}>\n                <ItemImage\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={original_title}\n                  width=\"240\"\n                  height=\"300\"\n                />\n                <Tumb>\n                  <ItemName>{title}</ItemName>\n                </Tumb>\n              </NavLink>\n            </Item>\n          ))}\n        </FilmList>\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst KEY = '46156cc0d20e82d0aaead8a5e0f96418';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrend() {\n  const responce = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return responce.data.results;\n}\nexport async function fetchSearchMovie(query, page) {\n  const response = await axios(`/search/movie?query=${query}`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n      page: page,\n      include_adult: false,\n    },\n  });\n  return response.data;\n}\nexport async function fetchMovieById(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n      append_to_response: id,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return response.data.results;\n}\n"],"names":["Hero","styled","background","Title","FilmList","Item","ItemImage","Tumb","ItemName","location","useLocation","useState","trandMovie","setTrandMovie","useEffect","fetchTrend","then","map","id","poster_path","title","original_title","to","state","from","src","alt","width","height","KEY","axios","params","api_key","responce","data","results","fetchSearchMovie","query","page","language","include_adult","response","fetchMovieById","append_to_response","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}